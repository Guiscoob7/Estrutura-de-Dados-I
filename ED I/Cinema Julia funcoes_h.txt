// Definindo códigos de cor ANSI para formatação do texto no terminal
#define RESET "\033[0m"           // Código para resetar as configurações de cor e estilo
#define BOLD "\033[1m"            // Código para texto em negrito
#define UNDERLINE "\033[4m"       // Código para texto sublinhado
#define GREEN "\033[32m"          // Código para texto verde
#define YELLOW "\033[33m"         // Código para texto amarelo
#define CYAN "\033[36m"           // Código para texto ciano
#define MAGENTA "\033[35m"        // Código para texto magenta
#define RED "\033[31m"            // Código para texto vermelho
#define BLUE "\033[34m"           // Código para texto azul
#define LIGHT_BLUE  "\033[94m"    // Código para texto azul claro
#define LIGHT_YELLOW  "\033[93m"  // Código para texto amarelo claro
#define LIGHT_CYAN   "\033[96m"   // Código para texto ciano claro
#define LIGHT_GREEN   "\033[92m"  // Código para texto verde claro     
#define PURPLE "\x1B[35m"         // Código para texto roxo    
#define ORANGE "\033[38;5;208m"   // Código para texto laranja

// Estrutura principal que contém a lista de ingressos
struct ingresso {                
  struct ingresso *prox;  // Ponteiro para o próximo ingresso na lista
  struct ingresso *ant;   // Ponteiro para o ingresso anterior na lista
  char filme[50];         // Nome do filme associado ao ingresso
  int assento;            // Número do assento
};

// Define tipos para simplificar o uso das estruturas
typedef struct ingresso Ingresso;                

// Função para limpar a tela e solicitar ao usuário pressionar ENTER para continuar
void limpar();

// Função para limpar o buffer de entrada, removendo caracteres extras
void limparbuffer();

// Função para criar uma nova lista de ingressos e inicializá-la
Ingresso* Cria_lista(void);

// Função para inserir um novo ingresso na lista
Ingresso* Insere_elem(Ingresso* Ptl, int num, char *filme);

// Função para exibir todos os elementos da lista de ingressos
void Exibir_lista_total(Ingresso* Ptl);

// Função para exibir todos os ingressos de um filme específico
void Exibir_lista(Ingresso *Ptl, char* filme, int* flag);

// Função para remover um ingresso da lista na posição especificada
Ingresso* Remove_elem(Ingresso* Ptl, int elem, char* filme, int *flag);

// Função para liberar a memória alocada para a lista de ingressos
Ingresso *Libera_lista(Ingresso *Ptl);

// Função para exibir uma mensagem de boas-vindas
void boasVindas();

// Função para inicializar a lista de filmes com ingressos disponíveis
Ingresso* inicializarFilmes(Ingresso *lista_disponiveis);

// Função para dividir a lista de ingressos em duas metades
Ingresso* Dividir_Lista (Ingresso* Ptl);

// Função para juntar duas listas de ingressos ordenadas
Ingresso* Juntar_Lista(Ingresso* Esquerda, Ingresso* Direita);

// Função para ordenar a lista de ingressos
Ingresso* Ordenar(Ingresso* Cabeca);
